#cloud-config

# autoinstall is an ubuntu feature which leverages cloud-init, which is a cross platform way to automatically setup
# devices. cloud-init syntax can be used here, either at the top level (outside of autoinstall) or under 
# autoinstall.user-data. 
# Documentation
#   autoinstall: https://canonical-subiquity.readthedocs-hosted.com/en/latest/intro-to-autoinstall.html
#   cloud-init: https://cloudinit.readthedocs.io/en/latest/index.html
#   autoinstall + cloud-init: https://canonical-subiquity.readthedocs-hosted.com/en/latest/explanation/cloudinit-autoinstall-interaction.html#cloud-init-and-autoinstall-interaction

# cloud-init setting
package_update: true

autoinstall:
  version: 1

  source:
    id: ubuntu-server-minimal

  locale: en_US.UTF-8
  keyboard:
    layout: us
  timezone: Europe/Rome

  network:
    network:
      version: 2
      ethernets:
        enp1s0:
          addresses:
            - 10.10.10.124/24
          routes:
            - to: default
              via: 10.10.10.1
          nameservers:
              addresses: [10.10.10.1, 1.1.1.1]

  ssh:
    install-server: true
    allow-pw: true

  packages:
    - git
    - python3-pip
    - network-manager
    - net-tools

  snaps:
    - name: pycharm-community
      channel: stable 
      classic: true
    - name: docker
      channel: stable 
      classic: true    

  shutdown: reboot
  
  storage:
    config:
      - id: disk-vda
        type: disk
        ptable: gpt
        path: /dev/vda
        wipe: superblock-recursive

      - id: efipart
        type: partition
        device: disk-vda
        offset: 1048576
        size: 600M
        flag: boot
        grub_device: true

      - id: bootpart
        type: partition
        device: disk-vda
        size: 1G

      - id: pvpart
        type: partition
        device: disk-vda
        size: -1

      - id: pvpart-crypt
        type: dm_crypt
        volume: pvpart
        key: password

      - id: vg0
        type: lvm_volgroup
        name: vg0
        devices:
          - pvpart-crypt

      - id: root_lv
        type: lvm_partition
        name: root_lv
        volgroup: vg0
        size: 10G
 
      - id: home_lv
        type: lvm_partition
        name: home_lv
        volgroup: vg0
        size: 7G

      - id: efipart_fs
        type: format
        volume: efipart
        fstype: fat32

      - id: bootpart_fs
        type: format
        volume: bootpart
        fstype: ext4

      - id: root_lv_fs
        type: format
        volume: root_lv
        fstype: ext4

      - id: home_lv_fs
        type: format
        volume: home_lv
        fstype: ext4

      - id: efipart-mount
        type: mount
        device: efipart_fs
        path: /boot/efi

      - id: bootpart-mount
        type: mount
        device: bootpart_fs
        path: /boot

      - id: root_lv_mount
        type: mount
        device: root_lv_fs
        path: /

      - id: home_lv_mount
        type: mount
        device: home_lv_fs
        path: /home

  # cloud-init settings which run on first boot (not every boot). Though there does exist an option to run commands per boot. 
  user-data:
    hostname: autoinstall-server
    users:
      - name: ansible
        groups: sudo,admin,wheel
        sudo: ALL=(ALL) NOPASSWD:ALL
        shell: /bin/bash
        lock_passwd: false
        # The command to hash the password is: openssl passwd -6 -stdin <<< [plain_text_password]
        # This password is: banshee
        passwd: $6$3q6tsfJ7xDWi6jvO$O8rGOc001WuInUurYINk2q0DPbeG9RoihCupZT74KM1qMVzLSm2NEleXCf1TVd4JkphlCa9.jwBZ/fHrbTe3Z0
        ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDAohUYma9nnGJelwFoLA/L970TxlTLdhlpH0TKYFaQx7H4vTDAXxVm0W5Zn94uuzgFxrvc0zDkdW8YcQfmgMrB6qWvWGnE2aRKBnpLBJIAdsMYuq1VxYG3njmIGISorw7f09fb1XBcqEcx0h26v1VIV7iPiKGVaBQBG2HpLtnnUwLZK7FHtKjAQ2lFOLjcVhP7DBFO/T2jn1PPa65hlwkb4m2MUrMvVjyplR6K88LUA7ZMU5DQfSTqZjNSYMR4yyfk2bGBGVlq8KlHvCCAaSlhxE4CWkTM7Uta+UuXUrzojuyBoxqHEnTbzCr5jja5NpiwVbDWa6YHD/MURcSpp5OYjlWUWLke75VgqQKQTbr/PlGF+dLmLBMJzGnILzf5w2jx7TUYkPS2PJtdyDytTpvc7cSQWo4DvhA2PNzDdjq7tjevhsD7P5s978C1KrQMSwo4E0eIt2upwcUkQAmH9rpv4uKuLBYUIST2WFY+2nOG12JEXAoNCLfeNrkZXzMf2BM= salwabalwa@Salwas-MacBook-Pro.local
    runcmd:
      # this is very specific. it doesnt work if it's not an array
      - [mkdir, /run/mydir]
      - [ wget, "http://slashdot.org", -O, /run/mydir/index.html ]

    ansible:
      # Install ansible
      package_name: ansible-core
      install_method: distro
      # pull will run the playbook locally (we could have optionally done this in setup_controllers)
      pull:
        url: https://github.com/hamzilla/home-automation.git
        playbook_name: ansible/debian.yaml
        # timeout: "120"
        # sleep: "5"

      setup_controller:
        # clone the repository
        repositories:
          - path: /home/ansible/k3s-ansible
            source: https://github.com/hamzilla/k3s-ansible.git
        # run the playbook
        run_ansible:
          - playbook_dir: /home/ansible/k3s-ansible
            playbook_name: playbooks/site.yml
            inventory: inventory.yml
            connection: local
            timeout: 240
            forks: 1
            