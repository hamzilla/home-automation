#cloud-config

resolv_conf:
  nameservers: ['8.8.4.4', '1.1.1.1']

# Update apt database on first boot (run 'apt-get update').
package_update: true

# Upgrade the instance on first boot
# Default: false
package_upgrade: true

# Add ansible user with keys
users:
- name: ansible
  gecos: Ansible User
  groups: users,admin,wheel
  sudo: ALL=(ALL) NOPASSWD:ALL
  shell: /bin/bash
  lock_passwd: false
  password: c5c767165ca51f2522eed0ee579cffe84b6b16971fe6a1d545b66f57532c70ad
  ssh_authorized_keys:
    - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDAohUYma9nnGJelwFoLA/L970TxlTLdhlpH0TKYFaQx7H4vTDAXxVm0W5Zn94uuzgFxrvc0zDkdW8YcQfmgMrB6qWvWGnE2aRKBnpLBJIAdsMYuq1VxYG3njmIGISorw7f09fb1XBcqEcx0h26v1VIV7iPiKGVaBQBG2HpLtnnUwLZK7FHtKjAQ2lFOLjcVhP7DBFO/T2jn1PPa65hlwkb4m2MUrMvVjyplR6K88LUA7ZMU5DQfSTqZjNSYMR4yyfk2bGBGVlq8KlHvCCAaSlhxE4CWkTM7Uta+UuXUrzojuyBoxqHEnTbzCr5jja5NpiwVbDWa6YHD/MURcSpp5OYjlWUWLke75VgqQKQTbr/PlGF+dLmLBMJzGnILzf5w2jx7TUYkPS2PJtdyDytTpvc7cSQWo4DvhA2PNzDdjq7tjevhsD7P5s978C1KrQMSwo4E0eIt2upwcUkQAmH9rpv4uKuLBYUIST2WFY+2nOG12JEXAoNCLfeNrkZXzMf2BM= salwabalwa@Salwas-MacBook-Pro.local"
  expire: False

packages:
  - openssh-server
  - dbus
  - dbus-user-session

ssh_authorized_keys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDAohUYma9nnGJelwFoLA/L970TxlTLdhlpH0TKYFaQx7H4vTDAXxVm0W5Zn94uuzgFxrvc0zDkdW8YcQfmgMrB6qWvWGnE2aRKBnpLBJIAdsMYuq1VxYG3njmIGISorw7f09fb1XBcqEcx0h26v1VIV7iPiKGVaBQBG2HpLtnnUwLZK7FHtKjAQ2lFOLjcVhP7DBFO/T2jn1PPa65hlwkb4m2MUrMvVjyplR6K88LUA7ZMU5DQfSTqZjNSYMR4yyfk2bGBGVlq8KlHvCCAaSlhxE4CWkTM7Uta+UuXUrzojuyBoxqHEnTbzCr5jja5NpiwVbDWa6YHD/MURcSpp5OYjlWUWLke75VgqQKQTbr/PlGF+dLmLBMJzGnILzf5w2jx7TUYkPS2PJtdyDytTpvc7cSQWo4DvhA2PNzDdjq7tjevhsD7P5s978C1KrQMSwo4E0eIt2upwcUkQAmH9rpv4uKuLBYUIST2WFY+2nOG12JEXAoNCLfeNrkZXzMf2BM= salwabalwa@Salwas-MacBook-Pro.local"

hostname: k8s-master

timezone: UTC 

users:
  - default
  - name: blockeduser

ssh_pwauth: True

### kairos ###

# enable debug logging
debug: true  

# The install block is to drive automatic installations without user interaction.
install:
  # Device for automated installs
  device: "/dev/sda"
  # Reboot after installation
  reboot: true
  # Power off after installation
  poweroff: false
  # Set to true when installing without Pairing
  auto: true

  # Override the grub entry name
  grub-entry-name: Kairos

  partitions:
    oem:
      size: 60
      fs: ext4
    recovery:
      size: 4096
      fs: ext4

  extra-partitions:
    - Name: myPartition
      size: 100
      fs: ext4
      label: ONE_PARTITION
    - Name: myOtherPartition
      size: 200
      fs: ext4
      label: TWO_PARTITION

  # no-format: true skips any disk partitioning and formatting
  # If set to true installation procedure will error out if expected
  # partitions are not already present within the disk.
  no-format: false

  # if no-format is used and elemental is running over an existing deployment
  # force can be used to force installation.
  force: false

  # Creates these dirs in the rootfs during installation. As the rootfs is RO from boot, sometimes we find that we
  # some applications want to write to non-standard paths like /data
  # If that dir is not already in the rootfs it makes it difficult to create that path on an RO system
  # This allows to create some extra paths in the rootfs that then we count use for mounting or binding via
  # the cloud-config stages
  extra-dirs-rootfs:
    - /data
    - /src

  # Override image sizes for active/passive/recovery
  # Note that the active+passive images are stored in the state partition and
  # the recovery in the recovery partition, so they should be big enough to accommodate te images sizes set below
  # size in MiB
  system:
    size: 4096
  passive:
    size: 4096
  recovery-system:
    size: 5000

# The reset block configures what happens when reset is called
reset:
  # Reboot after reset
  reboot: true
  # Power off after reset
  poweroff: true

  # Override the grub entry name
  grub-entry-name: Kairos

  # if set to true it will format persistent partitions ('oem 'and 'persistent')
  reset-persistent: true
  reset-oem: false    

  # Creates these dirs in the rootfs during reset. As the rootfs is RO from boot, sometimes we find that we
  # some applications want to write to non-standard paths like /data
  # If that dir is not already in the rootfs it makes it difficult to create that path on an RO system
  # This allows to create some extra paths in the rootfs that then we count use for mounting or binding via
  # the cloud-config stages
  extra-dirs-rootfs:
    - /data
    - /src

# The upgrade block configures what happens when upgrade is called
upgrade:
  # Reboot after upgrade
  reboot: true
  # Power off after upgrade
  poweroff: true

  # Override the grub entry name
  grub-entry-name: Kairos

  # if set to true upgrade command will upgrade recovery system instead
  # of main active system
  recovery: false

  # Override image sizes for active/recovery
  # Note that the active+passive images are stored in the state partition and
  # the recovery in the recovery partition, so they should be big enough to accommodate te images sizes set below
  # size in MiB
  # During upgrade only the active or recovery image cna be resized as those are the ones that contain the upgrade
  # passive image is the current system, and that its untouched during the upgrade
  system:
    size: 4096
  recovery-system:
    size: 5000

  # Creates these dirs in the rootfs during upgrade. As the rootfs is RO from boot, sometimes we find that we
  # some applications want to write to non-standard paths like /data
  # If that dir is not already in the rootfs it makes it difficult to create that path on an RO system
  # This allows to create some extra paths in the rootfs that then we count use for mounting or binding via
  # the cloud-config stages
  extra-dirs-rootfs:
    - /data
    - /src

# Enable K3s on the node.
k3s:
  enabled: true
  args:
    - --flannel-backend=none
    - --disable-network-policy
    - --disable=traefik,servicelb
